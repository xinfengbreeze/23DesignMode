结构型设计模式----桥接模式
核心：抽象化和实现化分离开，使他们都可以独立变化。

面向接口编程也是 广义的桥接模式

1、个人认为，桥接模式就是  面向接口编程、依赖注入、接口分离的实际应用

2、当 产品有多个维度的变化的时候，就要使用桥接模式

3、当产品各个属性都有多种变化的时候，使用继承会产生很多子类，而且耦合度高，使用组合的方式可以避免这些

例子中  汽车种类和发动机 就是两个维度的变化
如果发动机不从  汽车接口中分离出来，做一个单独的接口，那么汽车的子类就会很多

这里有接口 ------面向接口bianc
发动机接口抽取出来----接口分离
汽车持有发动机的引用------ 组合
发动机通过set方法添加进去-----依赖注入

