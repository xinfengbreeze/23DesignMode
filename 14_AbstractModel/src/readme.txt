行为设计模式-----抽象模板模式

使用场景：当有多个算法步骤或者操作步骤，一些步骤相对固定，但有一些步骤是要延迟到子类中，这时候可以考虑模板设计模式

模板类中的三大角色
1、基本方法：就是延时到子类中实现的，要该不变的方法
2、模板方法：就是不变的方法，比如算法的结构，步骤顺序，这是不变的，可以使 final 关键字防止子类重写
3、钩子方法：有些方法是提供了，但是子类可以控制是否执行，这时候后可以通过重写钩子方法的返回值boolean值，来控制方法时候执行。

抽象模板设计：实际开发中用的很多，比如Android中的 View,当你自定义View的时候，只要重写 几个方法，其他方法View这个模板类已经帮我们写好了。

例子： Car类是模板类   发动机 和  轮子 是可变的延迟到子类中去实现
                     前驱 、后驱、组装汽车的过程  是 每个汽车都需要的，是一样的   所以是 模板方法
                     但是不是 所有的汽车都是有后驱的，只有高版本的汽车才有
                     所以 判断高板的方法是 钩子方法


